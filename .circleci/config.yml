version: 2.1


jobs:

  build-test:
    working_directory: ~/apps
    docker:
      - image: 'python:3.7.3-stretch'
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-      
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
      - run:
          name: Lint python and dockerfile
          command: |
            . venv/bin/activate
            make lint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}


  build-docker-image:
    working_directory: ~/apps
    docker:
      - image: docker:20.10.21-git
    steps:
      - setup_remote_docker:
          version: 20.10.18
      - checkout
      - run:
          name: Build and push Docker image
          command: |
            docker build -t capstone .
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker tag capstone $DOCKERHUB_USERNAME/capstone:latest
            docker push $DOCKERHUB_USERNAME/capstone:latest
 
  create-eks-cluster:
    working_directory: ~/apps
    docker:
      - image: 'weaveworks/eksctl:latest'
    steps:
      - checkout 
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-         
      - run:
          name: Create EKS Cluster
          command: |
            sudo apt-get -y install tar gzip curl
            eksctl version
            eksctl create cluster --name cluster-${CIRCLE_WORKFLOW_ID:0:7} --region us-east-1 --nodegroup-name ng-1 --node-type t2.micro --nodes 2 --version 1.24 --zones us-east-1a,us-east-1b
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

  deploy-application:
    working_directory: ~/apps
    docker:
      - image: bearengineer/awscli-kubectl
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-         
      - run:
          name: Deploy Docker Image to EKS Cluster
          command: |  
            aws eks --region us-east-1 update-kubeconfig --name udacity-capstone
            kubectl create namespace udacity-capstone
            NS=$(kubectl get namespace udacity-capstone |grep udacity-capstone|awk '{print $1}')
            echo $NS
            if [ "$NS" = "udacity-capstone" ]
            then
              echo "Namespace exists"
            else
              echo "Creating Namespace"
              kubectl create namespace udacity-capstone
            fi
            kubectl apply -f cloudformation/deployment.yml
            

workflows:
  default:
    jobs:
      - build-test
      - build-docker-image:
          requires:
            - build-test
      - create-eks-cluster:
          requires:
            - build-docker-image
      #- deploy-application:
      #    requires: ['build-docker-image' , 'create-eks-cluster']
      #    requires: ['build-docker-image']
